# 旧ルール
# 1ゲーム=10フレーム。
# 1フレーム=2投。（例外あり）
# ピンの数は10本。
# 1投目で10本倒したらストライク。
# ストライクの場合は2投目は表記しない。
# 1投目で全て倒せなかった時、2投目で全て倒したらスペア。
# スペアのフレームの得点は次の1投の点を加算する。
# 例: 6 4 5 = 15
# 例: 6 4 10 = 20
# ストライクのフレームの得点は次の2投の点を加算する。
# 例: 10 5 2 = 17
# 例: 10 10 10 = 30
# 10フレーム目は1投目がストライクもしくは2投目がスペアだった場合、3投> 目が投げられる。
# ありえない投球数やありえない数字・記号がこない前提。
# 注意：ストライクのフレームはX0とはならない。（二投目は投げてないので0ではない）。0Xのフレームは場合はスペアとなる。

# 仕様
# bowling02.rb 6390038273X9180X64　で実行した時、
# [6,3,9,0,0,3,8,2,7,3,X,9,1,8,0,X,6,4]のように一つの数字ずつ取り出していく
# 2つ数字を取り出したら配列[]に入れる
# [[6, 3], [9, 0], [0, 3], [8, 2], [7, 3], [10, 0], [9, 1], [8, 0], [10, 0], [6, 4]]の様にストライク以外は２投で１フレームとなる
# bowling02.rb 6390038273X9180X64で実行すると、ストライクとスペアの時の加算がされていれば、合計数の 159　が出力される。
# Xの時は10点加算する → X == 10
# ２投したら次のフレームに移る、フレームを追加する
#  →[6, 3]の次は[9, 0]と移る。
# １投目でストライクの時は次のフレームに移る→[10, 0]の時、次のフレーム[]に移る。

# １フレーム目から９フレーム目までの処理（ストライク、それ以外）
# １投目がストライクの時、次のフレームの１投目と２投目のポイントを加算
#　→[10]の時、次のフレームが[2, 3]だったら、10+2+3=15 となる。
# ２投連続ストライクの時、10 + 10 + 次のフレームの1投目のポイントの加算
#  →[10], [10]とストライクが続き次のフレームが[5, 3]時は、10+10+5=25 となる。
# ３投連続ストライクの時、10 + 10 + 10　30ポイントの加算
#  →10+10+10=30 となる。
# それ以外（ストライクでもスペアでもない場合）の時はそのまま整数を入れる。
#  →[2, 3]の時は[2, 3]となる。

# １フレーム目から９フレーム目までのスペアの処理
# スペアの時（１投目が10ではなく１投目と２投目）10点 + 次のフレームの1投目のポイント
# →[3,7],[5, 2]の時は、3+7+5=15 となる。
# それ以外（ストライクでもスペアでもない場合）はそのまま整数を入れる
# →[2, 3]の時は[2, 3]となる。

# 10フレーム目の処理
# １投目がストライクの時、次のフレームの１投目と２投目のポイントを加算
# →[10]の時、次のフレームが[2, 3]だったら、10+2+3=15 となる。
# ２投連続ストライクの時、10 + 10 + 次のフレームの1投目のポイントの加算、フレームの追加
# →[10], [10]とストライクが続き次のフレームが[5, 3]時は、10+10+5=25 となる。
# ３投連続ストライクの時、10 + 10 + 10　30ポイントの加算、フレームを結合する
# →10+10+10=30 となる。
# 10フレームの1投+2投がスペア、3投目を追加、フレームの追加
# →[2, 8]の時[]を追加
# 10フレームの1投+2投がスペア、3投目がストライクの場合、フレームの追加
# →[2, 8], [10, 0]の時、[]を追加
# それ以外（ストライクでもスペアでもない場合）の時はそのまま整数を入れる
# →[2, 3]の時は[2, 3]となる。

score = ARGV[0] # "122345348071903181"
scores = score.chars
p scores
total_score = 0
# frame = []
# frames = []
i = 0

# if i == "X"
#   scores << 10
# else
#   i.to_i
# end

# if frame.count == 2
#   frames << frame
#   frame = []
# end

for i in scores
  total_score += i.to_i
end
# p frame
# p frames

p total_score
